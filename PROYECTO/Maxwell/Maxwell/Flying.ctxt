#BlueJ class context
comment0.target=Flying
comment0.text=\r\n\ Write\ a\ description\ of\ class\ Flying\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=color\ xPosition\ yPosition\ vx\ vy\ isRed
comment1.target=Flying(java.lang.String,\ int,\ int,\ int,\ int,\ boolean)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Flying\r\n
comment2.params=isInLeftSide\ minXLeftBoard\ maxXLeftBoard\ minXRightBoard\ maxXRightBoard\ minY\ maxY
comment2.target=void\ checkCollision(boolean,\ int,\ int,\ int,\ int,\ int,\ int)
comment2.text=\r\n\ Checks\ particles\ collision.\r\n\ @param\ isInLeftSide\ true\ if\ is\ in\ left\ side\ of\ the\ board.\r\n\ @param\ minXLeftBoard\ min\ x.\r\n\ @param\ maxXLeftBoard\ max\ x\ of\ leftboard.\r\n\ @param\ minXRightBoard\ min\ x\ of\ rightboard.\r\n\ @param\ maxXRightBoard\ max\ x\ of\ rightbaord.\r\n\ @param\ minY\ minimun\ y.\r\n\ @param\ maxY\ maximum\ y.\r\n
comment3.params=hole
comment3.target=boolean\ isInTheSamePosition(Hole)
comment3.text=\r\n\ Overrides\ the\ isInTheSamePosition\ method\ to\ make\ Flying\ particles\r\n\ never\ be\ considered\ in\ the\ same\ position\ as\ a\ gap.\r\n\ \r\n\ @param\ hole\ The\ hole\ to\ check\r\n\ @return\ false\ always,\ so\ that\ the\ particle\ flies\ over\ the\ gaps\r\n
numComments=4
