#BlueJ class context
comment0.target=Graph
comment0.text=\ Graph\r\n\ \r\n\ @Juan\ Sebastian\ Puentes\ Julio\ and\ Julian\ Camilo\ Lopez\ Barrero\r\n\ \r\n
comment1.params=
comment1.target=Graph()
comment10.params=g
comment10.target=Graph\ join(Graph)
comment11.params=vertex1\ vertex2
comment11.target=boolean\ containsVertices(java.lang.String,\ java.lang.String)
comment12.params=vertex1\ vertex2
comment12.target=Graph\ addEdge(java.lang.String,\ java.lang.String)
comment13.params=vertex1\ vertex2
comment13.target=Graph\ removeEdge(java.lang.String,\ java.lang.String)
comment14.params=
comment14.target=int\ vertices()
comment14.text=\r\n\ Returns\ the\ amount\ of\ vertex\ in\ a\ Graph.\r\n
comment15.params=
comment15.target=int\ edges()
comment15.text=\r\n\ Returns\ the\ amount\ of\ edges\ in\ a\ Graph.\r\n
comment16.params=g
comment16.target=boolean\ equals(Graph)
comment16.text=\r\n\ Verify\ if\ a\ graph\ is\ equal\ to\ another\ \r\n
comment17.params=
comment17.target=void\ deleteDuplicateVertices()
comment17.text=\r\n\ Delete\ Duplicate\ Vertexes\r\n
comment18.params=
comment18.target=void\ deleteDuplicateEdges()
comment18.text=\r\n\ Delete\ Duplicate\ Edges\r\n
comment19.params=
comment19.target=void\ upperCaseVertices()
comment19.text=\r\n\ Transform\ the\ vertexes\ to\ uppercase\r\n
comment2.params=vertices\ edges
comment2.target=Graph(java.util.ArrayList,\ java.util.ArrayList)
comment20.params=
comment20.target=void\ upperCaseEdges()
comment20.text=\r\n\ Transform\ the\ edges\ to\ uppercase\r\n
comment21.params=g
comment21.target=boolean\ equals(java.lang.Object)
comment22.params=
comment22.target=java.lang.String\ toString()
comment22.text=\r\n\ Transform\ to\ String\ Vertexes\ and\ Edges\r\n
comment23.params=
comment23.target=java.util.ArrayList\ getEdges()
comment3.params=vertices\ edges
comment3.target=Graph(java.lang.String[],\ java.lang.String[][])
comment4.params=vertex
comment4.target=boolean\ contains(java.lang.String)
comment4.text=\r\n\ Verifies\ that\ a\ graph\ has\ a\ given\ vertex.\r\n
comment5.params=start\ end
comment5.target=Graph\ path(java.lang.String,\ java.lang.String)
comment6.params=current\ end\ visited\ parent
comment6.target=boolean\ dfs(java.lang.String,\ java.lang.String,\ java.util.ArrayList,\ java.util.ArrayList)
comment6.text=\r\n\ Recursive\ DFS\ to\ help\ method\ path.\r\n
comment7.params=g
comment7.target=Graph\ union(Graph)
comment7.text=\r\n\ Method\ to\ do\ an\ union\ between\ two\ Graphs\r\n
comment8.params=g
comment8.target=Graph\ intersection(Graph)
comment9.params=g
comment9.target=Graph\ difference(Graph)
numComments=24
